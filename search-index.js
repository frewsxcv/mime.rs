var searchIndex = {};
searchIndex['mime'] = {"items":[[0,"","mime","# Mime"],[3,"Mime","","Mime, or Media Type. Encapsulates common registers types."],[4,"TopLevel","",""],[13,"Star","","",0],[13,"Text","","",0],[13,"Image","","",0],[13,"Audio","","",0],[13,"Video","","",0],[13,"Application","","",0],[13,"Multipart","","",0],[13,"Message","","",0],[13,"Model","","",0],[13,"Ext","","",0],[4,"SubLevel","",""],[13,"Star","","",1],[13,"Plain","","",1],[13,"Html","","",1],[13,"Xml","","",1],[13,"Javascript","","",1],[13,"Css","","",1],[13,"Json","","",1],[13,"WwwFormUrlEncoded","","",1],[13,"FormData","","",1],[13,"Png","","",1],[13,"Gif","","",1],[13,"Bmp","","",1],[13,"Jpeg","","",1],[13,"Ext","","",1],[4,"Attr","",""],[13,"Charset","","",2],[13,"Q","","",2],[13,"Ext","","",2],[4,"Value","",""],[13,"Utf8","","",3],[13,"Ext","","",3],[6,"Param","",""],[11,"fmt","","",4],[11,"eq","","",4],[11,"ne","","",4],[11,"clone","","",4],[11,"fmt","","",0],[11,"clone","","",0],[11,"eq","","",0],[11,"fmt","","",0],[6,"Err","",""],[11,"from_str","","",0],[11,"fmt","","",1],[11,"clone","","",1],[11,"eq","","",1],[11,"fmt","","",1],[6,"Err","",""],[11,"from_str","","",1],[11,"fmt","","",2],[11,"clone","","",2],[11,"eq","","",2],[11,"fmt","","",2],[6,"Err","",""],[11,"from_str","","",2],[11,"fmt","","",3],[11,"clone","","",3],[11,"eq","","",3],[11,"fmt","","",3],[6,"Err","",""],[11,"from_str","","",3],[11,"fmt","","",4],[6,"Err","",""],[11,"from_str","","",4]],"paths":[[4,"TopLevel"],[4,"SubLevel"],[4,"Attr"],[4,"Value"],[3,"Mime"]]};
searchIndex['log'] = {"items":[[0,"","log","A lightweight logging facade."],[3,"LogRecord","","The \"payload\" of a log message."],[3,"LogLocation","","The location of a log message."],[12,"module_path","","The module path of the message.",0],[12,"file","","The source file containing the message.",0],[12,"line","","The line containing the message.",0],[3,"MaxLogLevelFilter","","A token providing read and write access to the global maximum log level\nfilter."],[3,"SetLoggerError","","The type returned by `set_logger` if `set_logger` has already been called."],[4,"LogLevel","","An enum representing the available verbosity levels of the logging framework"],[13,"Error","","The \"error\" level.",1],[13,"Warn","","The \"warn\" level.",1],[13,"Info","","The \"info\" level.",1],[13,"Debug","","The \"debug\" level.",1],[13,"Trace","","The \"trace\" level.",1],[4,"LogLevelFilter","","An enum representing the available verbosity level filters of the logging\nframework."],[13,"Off","","A level lower than all log levels.",2],[13,"Error","","Corresponds to the `Error` log level.",2],[13,"Warn","","Corresponds to the `Warn` log level.",2],[13,"Info","","Corresponds to the `Trace` log level.",2],[13,"Debug","","Corresponds to the `Debug` log level.",2],[13,"Trace","","Corresponds to the `Trace` log level.",2],[5,"max_log_level","","Returns the current maximum log level."],[5,"set_logger","","Sets the global logger."],[5,"enabled","","Determines if the current logger will ignore a log message at the specified\nlevel from the specified module."],[5,"log","","Logs a message."],[8,"Log","","A trait encapsulating the operations required of a logger"],[10,"enabled","","Determines if a log message sent at the specified level from the\nspecified module would be logged.",3],[10,"log","","Logs the `LogRecord`.",3],[11,"fmt","","",1],[11,"clone","","",1],[11,"eq","","",1],[11,"eq","","",1],[11,"partial_cmp","","",1],[11,"partial_cmp","","",1],[11,"cmp","","",1],[6,"Err","",""],[11,"from_str","","",1],[11,"fmt","","",1],[11,"max","","Returns the most verbose logging level.",1],[11,"to_log_level_filter","","Converts the `LogLevel` to the equivalent `LogLevelFilter`.",1],[11,"fmt","","",2],[11,"clone","","",2],[11,"eq","","",2],[11,"eq","","",2],[11,"partial_cmp","","",2],[11,"partial_cmp","","",2],[11,"cmp","","",2],[6,"Err","",""],[11,"from_str","","",2],[11,"fmt","","",2],[11,"max","","Returns the most verbose logging level filter.",2],[11,"to_log_level","","Converts `self` to the equivalent `LogLevel`.",2],[11,"new","","Creates a new `LogRecord`.",4],[11,"args","","The message body.",4],[11,"location","","The location of the log directive.",4],[11,"level","","The verbosity level of the message.",4],[11,"fmt","","",0],[11,"clone","","",0],[11,"fmt","","",5],[11,"get","","Gets the current maximum log level filter.",5],[11,"set","","Sets the maximum log level.",5],[11,"fmt","","",6],[11,"fmt","","",6],[14,"log!","","The standard logging macro."],[14,"error!","","Logs a message at the error level."],[14,"warn!","","Logs a message at the warn level."],[14,"info!","","Logs a message at the info level."],[14,"debug!","","Logs a message at the debug level."],[14,"trace!","","Logs a message at the trace level."],[14,"log_enabled!","","Determines if a message logged at the specified level in that module will\nbe logged."]],"paths":[[3,"LogLocation"],[4,"LogLevel"],[4,"LogLevelFilter"],[8,"Log"],[3,"LogRecord"],[3,"MaxLogLevelFilter"],[3,"SetLoggerError"]]};

initSearch(searchIndex);
